/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package timeclock;
import javax.swing.JTable;
/**
 *
 * @author phillip.oegema
 */
public class TimeclockJFrame extends javax.swing.JFrame {

    static shared shared;
    
    /**
     * Creates new form TimeclockJFrame
     */
    public TimeclockJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonRefresh = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemLoadDefault = new javax.swing.JMenuItem();
        jMenuItemChooseObjects = new javax.swing.JMenuItem();
        jMenuItemChooseFile = new javax.swing.JMenuItem();
        jMenuItemLoadFile = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemFilter = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OITKey Timeclock");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "In or out", "Time", "Checked out to"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTable1.setDragEnabled(true);
        jScrollPane1.setViewportView(jTable1);

        jButtonRefresh.setText("Refresh");
        jButtonRefresh.setEnabled(false);
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItemLoadDefault.setText("Load Default");
        jMenuItemLoadDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLoadDefaultActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemLoadDefault);

        jMenuItemChooseObjects.setText("Choose Objects File");
        jMenuItemChooseObjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemChooseObjectsActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemChooseObjects);

        jMenuItemChooseFile.setText("Choose Records File");
        jMenuItemChooseFile.setEnabled(false);
        jMenuItemChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemChooseFileActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemChooseFile);

        jMenuItemLoadFile.setText("Load File");
        jMenuItemLoadFile.setEnabled(false);
        jMenuItemLoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLoadFileActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemLoadFile);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItemFilter.setText("Filter");
        jMenuItemFilter.setEnabled(false);
        jMenuItemFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFilterActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemFilter);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonRefresh)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRefresh)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemChooseFileActionPerformed
       FileChooser j = new FileChooser();
       j.main(shared, 1);
       jMenuItemLoadFile.setEnabled(true);
    }//GEN-LAST:event_jMenuItemChooseFileActionPerformed

    private void jMenuItemChooseObjectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemChooseObjectsActionPerformed
        FileChooser j = new FileChooser();
        j.main(shared, 0);
        jMenuItemChooseFile.setEnabled(true);
    }//GEN-LAST:event_jMenuItemChooseObjectsActionPerformed

    private void jMenuItemLoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLoadFileActionPerformed
       shared.setupArray();
       int size = shared.getPopulatedList().length;
       String[][] populatedList = new String[size][4];
       populatedList = shared.getPopulatedList().clone();
       
     jTable1.setModel(new javax.swing.table.DefaultTableModel(
            populatedList,
            new String [] {
                "Name", "In or out", "Time", "Checked out to"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
  
       jMenuItemFilter.setEnabled(true);
    }//GEN-LAST:event_jMenuItemLoadFileActionPerformed

    private void jMenuItemFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFilterActionPerformed
        FilterJFrame.main(shared);
        jButtonRefresh.setEnabled(true);
    }//GEN-LAST:event_jMenuItemFilterActionPerformed

    private void jMenuItemLoadDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLoadDefaultActionPerformed
       shared.timeClockSetObjectFile("\\\\mccoit\\oitkey\\objects");
       shared.timeClockSetRecordsFile("\\\\mccoit\\oitkey\\records");
       jMenuItemLoadFileActionPerformed(null);
       jMenuItemFilter.setEnabled(true);
    }//GEN-LAST:event_jMenuItemLoadDefaultActionPerformed

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        //int size = shared.getPopulatedList().length;
        int size = shared.getFilteredSize();
       String[][] populatedList = new String[size][4];
       populatedList = shared.getPopulatedList().clone();
                
     jTable1.setModel(new javax.swing.table.DefaultTableModel(
            populatedList,
            new String [] {
                "Name", "In or out", "Time", "Checked out to"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(shared s) {
        shared = s;
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimeclockJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimeclockJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimeclockJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimeclockJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                new TimeclockJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemChooseFile;
    private javax.swing.JMenuItem jMenuItemChooseObjects;
    private javax.swing.JMenuItem jMenuItemFilter;
    private javax.swing.JMenuItem jMenuItemLoadDefault;
    private javax.swing.JMenuItem jMenuItemLoadFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
